{"ast":null,"code":"import thunk from \"redux-thunk\";\nimport { LOAD_USERS, LOAD_QUESTIONS, SET_ACTIVE_USER } from \"./types\";\nimport { getAllUsers } from \"../DATA\";\nimport { getAllQuestions } from \"../DATA\";\nimport { useDispatch } from \"react-redux\"; // users \n\nexport function loadUsers(users) {\n  return {\n    type: LOAD_USERS,\n    //Actions shoud return types\n    users // users = users: users\n\n  };\n} //questions\n\nexport function loadQuestions(questions) {\n  return {\n    type: LOAD_QUESTIONS,\n    questions\n  };\n} // thunk function for combine API functioon\n\nexport const getInitialData = () => {\n  return function (dispatch) {\n    getAllUsers().then(users => dispatch(loadUsers(users)));\n    getAllQuestions().then(questions => dispatch(loadQuestions(questions)));\n  };\n}; //active user\n//questions\n\nexport function activeUser(activeUser) {\n  return {\n    type: SET_ACTIVE_USER,\n    activeUser\n  };\n}\nexport const setActiveUser = activeUser => {\n  return function (dispatch) {\n    dispatch(setActiveUser(activeUser));\n  };\n};","map":{"version":3,"sources":["/Users/amalalqoud/Documents/GitHub/redux-pro/src/actions/index.js"],"names":["thunk","LOAD_USERS","LOAD_QUESTIONS","SET_ACTIVE_USER","getAllUsers","getAllQuestions","useDispatch","loadUsers","users","type","loadQuestions","questions","getInitialData","dispatch","then","activeUser","setActiveUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,eAArC,QAA4D,SAA5D;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAER,UADD;AACa;AAClBO,IAAAA,KAFK,CAEE;;AAFF,GAAP;AAID,C,CAGD;;AACA,OAAO,SAASE,aAAT,CAAuBC,SAAvB,EAAkC;AACvC,SAAO;AACLF,IAAAA,IAAI,EAAEP,cADD;AAELS,IAAAA;AAFK,GAAP;AAID,C,CAGD;;AACA,OAAO,MAAMC,cAAc,GAAC,MAAM;AAClC,SAAO,UAASC,QAAT,EAAkB;AACrBT,IAAAA,WAAW,GAAGU,IAAd,CAAoBN,KAAD,IAAWK,QAAQ,CAACN,SAAS,CAACC,KAAD,CAAV,CAAtC;AACAH,IAAAA,eAAe,GAAGS,IAAlB,CAAwBH,SAAD,IAAeE,QAAQ,CAACH,aAAa,CAACC,SAAD,CAAd,CAA9C;AACH,GAHD;AAKC,CANM,C,CASP;AACA;;AACA,OAAO,SAASI,UAAT,CAAoBA,UAApB,EAAgC;AACnC,SAAO;AACLN,IAAAA,IAAI,EAAEN,eADD;AAELY,IAAAA;AAFK,GAAP;AAID;AAGD,OAAO,MAAMC,aAAa,GAAED,UAAD,IAAgB;AACvC,SAAO,UAASF,QAAT,EAAkB;AACrBA,IAAAA,QAAQ,CAACG,aAAa,CAACD,UAAD,CAAd,CAAR;AAEH,GAHD;AAIH,CALM","sourcesContent":["import thunk from \"redux-thunk\";\nimport { LOAD_USERS, LOAD_QUESTIONS, SET_ACTIVE_USER } from \"./types\";\nimport { getAllUsers } from \"../DATA\";\nimport { getAllQuestions } from \"../DATA\";\nimport { useDispatch } from \"react-redux\";\n// users \nexport function loadUsers(users) {\n  return {\n    type: LOAD_USERS, //Actions shoud return types\n    users, // users = users: users\n  };\n}\n\n\n//questions\nexport function loadQuestions(questions) {\n  return {\n    type: LOAD_QUESTIONS,\n    questions,\n  };\n}\n\n\n// thunk function for combine API functioon\nexport const getInitialData=() => {\nreturn function(dispatch){\n    getAllUsers().then((users) => dispatch(loadUsers(users)));\n    getAllQuestions().then((questions) => dispatch(loadQuestions(questions)));\n}\n   \n}\n\n\n//active user\n//questions\nexport function activeUser(activeUser) {\n    return {\n      type: SET_ACTIVE_USER,\n      activeUser,\n    };\n  }\n\n\n  export const setActiveUser=(activeUser) => {\n      return function(dispatch){\n          dispatch(setActiveUser(activeUser))\n\n      }\n  }"]},"metadata":{},"sourceType":"module"}