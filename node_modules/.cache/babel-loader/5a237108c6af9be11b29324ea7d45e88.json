{"ast":null,"code":"// Initial Data\nlet users = {\n  elonmusk: {\n    id: 1,\n    fullname: \"Elon Musk\",\n    imgUrl: \"https://upload.wikimedia.org/wikipedia/commons/3/34/Elon_Musk_Royal_Society_%28crop2%29.jpg\",\n    questions: [\"tvtzpuph1oo\", \"5yv0wo4lvv8\"],\n    answers: {\n      tvtzpuph1oo: \"secondOption\"\n    }\n  },\n  billgates: {\n    id: 2,\n    fullname: \"Bill Gates\",\n    imgUrl: \"https://pbs.twimg.com/profile_images/1414439092373254147/JdS8yLGI_400x400.jpg\",\n    questions: [\"jbo66c96nxf\"],\n    answers: {\n      tvtzpuph1oo: \"secondOption\",\n      \"5yv0wo4lvv8\": \"firstOption\"\n    }\n  },\n  mohamedqasem: {\n    id: 3,\n    fullname: \"Mohamed Qasem\",\n    imgUrl: \"https://pbs.twimg.com/profile_images/1460497444899368965/3oI-M_iT_400x400.jpg\",\n    questions: [\"xpcp92uqgs\"],\n    answers: {\n      tvtzpuph1oo: \"firstOption\"\n    }\n  }\n};\nlet questions = {\n  tvtzpuph1oo: {\n    id: \"tvtzpuph1oo\",\n    creator: \"elonmusk\",\n    created: 1642222679,\n    firstOption: {\n      votes: [\"mohamedqasem\"],\n      string: \"Get 1,000,000$ right now\"\n    },\n    secondOption: {\n      votes: [\"billgates\", \"elonmusk\"],\n      string: \"Get 100,000,000$ after 40 years\"\n    }\n  },\n  \"5yv0wo4lvv8\": {\n    id: \"5yv0wo4lvv8\",\n    creator: \"elonmusk\",\n    created: 1642324699,\n    firstOption: {\n      votes: [\"billgates\"],\n      string: \"Stay at home on weekends and relax\"\n    },\n    secondOption: {\n      votes: [],\n      string: \"Go out with your friends on weekends\"\n    }\n  },\n  jbo66c96nxf: {\n    id: \"jbo66c96nxf\",\n    creator: \"billgates\",\n    created: 1642624453,\n    firstOption: {\n      votes: [],\n      string: \"Read a book\"\n    },\n    secondOption: {\n      votes: [],\n      string: \"Take a course\"\n    }\n  },\n  xpcp92uqgs: {\n    id: \"xpcp92uqgs\",\n    creator: \"mohamedqasem\",\n    created: 1642924434,\n    firstOption: {\n      votes: [],\n      string: \"Watch a movie\"\n    },\n    secondOption: {\n      votes: [],\n      string: \"Play a game\"\n    }\n  }\n}; // Helpers functions\n\nconst uUID = () => {\n  return Math.random().toString(36).substring(2, 20);\n};\n\nconst structureQuestion = _ref => {\n  let {\n    creator,\n    answerOne,\n    answerTwo\n  } = _ref;\n  return {\n    id: uUID(),\n    creator,\n    created: Date.now(),\n    firstOption: {\n      votes: [],\n      string: answerOne\n    },\n    secondOption: {\n      votes: [],\n      string: answerTwo\n    }\n  };\n}; //API methods\n\n\nexport const getAllUsers = () => {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users\n    }), 1000);\n  });\n};\nexport const getAllQuestions = () => {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...questions\n    }), 1000);\n  });\n};\nexport const addQuestion = question => {\n  return new Promise((res, rej) => {\n    const authedUser = question.creator;\n    const structuredQuestion = structureQuestion(question);\n    setTimeout(() => {\n      questions = { ...questions,\n        [structuredQuestion.id]: structuredQuestion\n      };\n      users = { ...users,\n        [authedUser]: { ...users[authedUser],\n          questions: users[authedUser].questions.concat([structuredQuestion.id])\n        }\n      };\n      res(structuredQuestion);\n    }, 1000);\n  });\n};\nexport const addAnswerToQuestion = _ref2 => {\n  let {\n    answer,\n    authedUser,\n    questionId\n  } = _ref2;\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = { ...users,\n        [authedUser]: { ...users[authedUser],\n          answers: { ...users[authedUser].answers,\n            [questionId]: answer\n          }\n        }\n      };\n      questions = { ...questions,\n        [questionId]: { ...questions[questionId],\n          [answer]: { ...questions[questionId][answer],\n            votes: questions[questionId][answer].votes.concat([authedUser])\n          }\n        }\n      };\n      res();\n    }, 500);\n  });\n};","map":{"version":3,"sources":["/Users/amalalqoud/Documents/GitHub/redux-pro/src/DATA.js"],"names":["users","elonmusk","id","fullname","imgUrl","questions","answers","tvtzpuph1oo","billgates","mohamedqasem","creator","created","firstOption","votes","string","secondOption","jbo66c96nxf","xpcp92uqgs","uUID","Math","random","toString","substring","structureQuestion","answerOne","answerTwo","Date","now","getAllUsers","Promise","res","rej","setTimeout","getAllQuestions","addQuestion","question","authedUser","structuredQuestion","concat","addAnswerToQuestion","answer","questionId"],"mappings":"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","sourcesContent":["// Initial Data\n\nlet users = {\n  elonmusk: {\n    id: 1,\n    fullname: \"Elon Musk\",\n    imgUrl:\n      \"https://upload.wikimedia.org/wikipedia/commons/3/34/Elon_Musk_Royal_Society_%28crop2%29.jpg\",\n    questions: [\"tvtzpuph1oo\", \"5yv0wo4lvv8\"],\n    answers: { tvtzpuph1oo: \"secondOption\" },\n  },\n  billgates: {\n    id: 2,\n    fullname: \"Bill Gates\",\n    imgUrl:\n      \"https://pbs.twimg.com/profile_images/1414439092373254147/JdS8yLGI_400x400.jpg\",\n    questions: [\"jbo66c96nxf\"],\n    answers: { tvtzpuph1oo: \"secondOption\", \"5yv0wo4lvv8\": \"firstOption\" },\n  },\n  mohamedqasem: {\n    id: 3,\n    fullname: \"Mohamed Qasem\",\n    imgUrl:\n      \"https://pbs.twimg.com/profile_images/1460497444899368965/3oI-M_iT_400x400.jpg\",\n    questions: [\"xpcp92uqgs\"],\n    answers: { tvtzpuph1oo: \"firstOption\" },\n  },\n};\n\nlet questions = {\n  tvtzpuph1oo: {\n    id: \"tvtzpuph1oo\",\n    creator: \"elonmusk\",\n    created: 1642222679,\n    firstOption: {\n      votes: [\"mohamedqasem\"],\n      string: \"Get 1,000,000$ right now\",\n    },\n    secondOption: {\n      votes: [\"billgates\", \"elonmusk\"],\n      string: \"Get 100,000,000$ after 40 years\",\n    },\n  },\n  \"5yv0wo4lvv8\": {\n    id: \"5yv0wo4lvv8\",\n    creator: \"elonmusk\",\n    created: 1642324699,\n    firstOption: {\n      votes: [\"billgates\"],\n      string: \"Stay at home on weekends and relax\",\n    },\n    secondOption: {\n      votes: [],\n      string: \"Go out with your friends on weekends\",\n    },\n  },\n  jbo66c96nxf: {\n    id: \"jbo66c96nxf\",\n    creator: \"billgates\",\n    created: 1642624453,\n    firstOption: {\n      votes: [],\n      string: \"Read a book\",\n    },\n    secondOption: {\n      votes: [],\n      string: \"Take a course\",\n    },\n  },\n  xpcp92uqgs: {\n    id: \"xpcp92uqgs\",\n    creator: \"mohamedqasem\",\n    created: 1642924434,\n    firstOption: {\n      votes: [],\n      string: \"Watch a movie\",\n    },\n    secondOption: {\n      votes: [],\n      string: \"Play a game\",\n    },\n  },\n};\n\n// Helpers functions\nconst uUID = () => {\n  return Math.random().toString(36).substring(2, 20);\n};\n\nconst structureQuestion = ({ creator, answerOne, answerTwo }) => {\n  return {\n    id: uUID(),\n    creator,\n    created: Date.now(),\n    firstOption: { votes: [], string: answerOne },\n    secondOption: { votes: [], string: answerTwo },\n  };\n};\n\n//API methods\n\nexport const getAllUsers = () => {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users }), 1000);\n  });\n};\n\nexport const getAllQuestions = () => {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...questions }), 1000);\n  });\n};\n\nexport const addQuestion = (question) => {\n  return new Promise((res, rej) => {\n    const authedUser = question.creator;\n    const structuredQuestion = structureQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [structuredQuestion.id]: structuredQuestion,\n      };\n\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([\n            structuredQuestion.id,\n          ]),\n        },\n      };\n\n      res(structuredQuestion);\n    }, 1000);\n  });\n};\n\nexport const addAnswerToQuestion = ({ answer, authedUser, questionId }) => {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [questionId]: answer,\n          },\n        },\n      };\n\n      questions = {\n        ...questions,\n        [questionId]: {\n          ...questions[questionId],\n          [answer]: {\n            ...questions[questionId][answer],\n            votes: questions[questionId][answer].votes.concat([authedUser]),\n          },\n        },\n      };\n\n      res();\n    }, 500);\n  });\n};\n"]},"metadata":{},"sourceType":"module"}