{"ast":null,"code":"var _jsxFileName = \"/Users/amalalqoud/Documents/GitHub/redux-pro/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { getAllUsers } from \"./DATA\";\nimport { getAllQuestions } from \"./DATA\";\nimport { useDispatch } from \"react-redux\";\nimport { loadUsers } from \"./actions\"; // it take user return type +users\n\nimport { loadQuestions } from \"./actions\";\nimport { activeUser } from \"./actions\";\nimport { useSelector } from \"react-redux\"; //Added\n\nimport home from \"./pages/Home\";\nimport { useEffect } from \"react\";\nimport { getInitialData } from './actions';\nimport { duration } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var _Object$values, _Object$values2;\n\n  useEffect(() => {\n    // getAllUsers().then((users) => dispatch(loadUsers(users)));\n    // getAllQuestions().then((questions) => dispatch(loadQuestions(questions)));\n    dispatch(getInitialData()); //const selectedItem=dispatch(loadSelectedItem((this.state.value)));\n  }, []); //const usersValue = useSelector(state => state.users);\n  //{usersValues.map((usersVal) => <option key={usersVal.fullname}></option>)}\n\n  const userlists = useSelector(state => state.users);\n  console.log(userlists, \"user list\"); ////------------------------------\n\n  const selectedUser = useSelector(state => null);\n  const dispatch = useDispatch();\n  selectedUser = dispatch(activeUser(selectedUser)); ////------------------------------\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    align: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The login screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The select username is used to select a username to login.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"usersnames\",\n          children: \"Choose a username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"dropdown\",\n          onChange: e => {\n            selectedUser(e.target.value);\n          },\n          children: (_Object$values = Object.values(userlists)) === null || _Object$values === void 0 ? void 0 : _Object$values.map(userlist => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: userlist,\n            children: userlist.fullname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          children: (_Object$values2 = Object.values(userlists)) === null || _Object$values2 === void 0 ? void 0 : _Object$values2.map(userlist => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: userlist,\n            children: userlist.fullname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          defaultValue: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"CWpIYgY9xx9bKbUteo0g+FukJVc=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/amalalqoud/Documents/GitHub/redux-pro/src/App.js"],"names":["getAllUsers","getAllQuestions","useDispatch","loadUsers","loadQuestions","activeUser","useSelector","home","useEffect","getInitialData","duration","App","dispatch","userlists","state","users","console","log","selectedUser","e","target","value","Object","values","map","userlist","fullname"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,QAA5B;AACA,SAASC,eAAT,QAAgC,QAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,WAA1B,C,CAAuC;;AACvC,SAASC,aAAT,QAA8B,WAA9B;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAA2C;;AAC3C,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAASC,QAAT,QAAyB,eAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAAA;;AAEbH,EAAAA,SAAS,CAAC,MAAM;AACf;AACA;AACAI,IAAAA,QAAQ,CAACH,cAAc,EAAf,CAAR,CAHe,CAId;AACD,GALQ,EAKN,EALM,CAAT,CAFa,CASb;AACA;;AACA,QAAMI,SAAS,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA7B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EAAuB,WAAvB,EAba,CAeb;;AACA,QAAMK,YAAY,GAAGZ,WAAW,CAACQ,KAAK,IAAI,IAAV,CAAhC;AACA,QAAMF,QAAQ,GAAGV,WAAW,EAA5B;AACAgB,EAAAA,YAAY,GAACN,QAAQ,CAACP,UAAU,CAACa,YAAD,CAAX,CAArB,CAlBa,CAmBb;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAC,QAAjC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAQ,UAAA,EAAE,EAAC,UAAX;AAAsB,UAAA,QAAQ,EAAGC,CAAD,IAAO;AAACD,YAAAA,YAAY,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAA6B,WAArE;AAAA,sCACGC,MAAM,CAACC,MAAP,CAAcV,SAAd,CADH,mDACG,eAA0BW,GAA1B,CAA+BC,QAAD,iBAC7B;AAAQ,YAAA,KAAK,EAAEA,QAAf;AAAA,sBAA0BA,QAAQ,CAACC;AAAnC;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAHF,eASE;AAAA,uCACGJ,MAAM,CAACC,MAAP,CAAcV,SAAd,CADH,oDACG,gBAA0BW,GAA1B,CAA+BC,QAAD,iBAC7B;AAAQ,YAAA,KAAK,EAAEA,QAAf;AAAA,sBAA0BA,QAAQ,CAACC;AAAnC;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBATF,eAeE;AAAA;AAAA;AAAA;AAAA,gBAfF,eAgBE;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAiBE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,YAAY,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAnDQf,G;UAWWL,W,EAKGA,W,EACJJ,W;;;KAjBVS,G;AAqDT,eAAeA,GAAf","sourcesContent":["import { getAllUsers } from \"./DATA\";\nimport { getAllQuestions } from \"./DATA\";\nimport { useDispatch } from \"react-redux\";\nimport { loadUsers } from \"./actions\"; // it take user return type +users\nimport { loadQuestions } from \"./actions\";\nimport { activeUser } from \"./actions\";\nimport { useSelector } from \"react-redux\"; //Added\nimport home from \"./pages/Home\";\nimport { useEffect } from \"react\";\nimport {getInitialData} from './actions'\nimport { duration } from \"@mui/material\";\n\nfunction App() {\n  \n  useEffect(() => {\n   // getAllUsers().then((users) => dispatch(loadUsers(users)));\n   // getAllQuestions().then((questions) => dispatch(loadQuestions(questions)));\n   dispatch(getInitialData());\n    //const selectedItem=dispatch(loadSelectedItem((this.state.value)));\n  }, []);\n\n  //const usersValue = useSelector(state => state.users);\n  //{usersValues.map((usersVal) => <option key={usersVal.fullname}></option>)}\n  const userlists = useSelector((state) => state.users);\n\n  console.log(userlists, \"user list\");\n\n  ////------------------------------\n  const selectedUser = useSelector(state => null);\n  const dispatch = useDispatch();\n  selectedUser=dispatch(activeUser(selectedUser))\n  ////------------------------------\n\n  \n \n  return (\n    <div className=\"container\" align=\"center\">\n      <div className=\"center\">\n        <h1>The login screen</h1>\n        <p>The select username is used to select a username to login.</p>\n\n        <form>\n          <label htmlFor=\"usersnames\">Choose a username:</label>\n\n          <select id=\"dropdown\" onChange={(e) => {selectedUser(e.target.value)}}>\n            {Object.values(userlists)?.map((userlist) => (\n              <option value={userlist}>{userlist.fullname}</option>\n            ))}\n          </select>\n\n          <select>\n            {Object.values(userlists)?.map((userlist) => (\n              <option value={userlist}>{userlist.fullname}</option>\n            ))}\n          </select>\n\n          <br />\n          <br />\n          <input type=\"submit\" defaultValue=\"Submit\"></input>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}